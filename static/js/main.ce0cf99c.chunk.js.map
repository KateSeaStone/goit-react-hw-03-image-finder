{"version":3,"sources":["components/Container/Container.js","components/Searchbar/Searchbar.js","api/imagesApi.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","this","type","onChange","autoComplete","autoFocus","placeholder","Component","fetchImages","currentPage","a","fetch","result","json","ImageGalleryItem","id","original","preview","showModal","src","alt","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleOverlayClick","target","clickOnImage","window","addEventListener","removeEventListener","createPortal","largeImageURL","Button","handleClick","Loader","color","height","width","timeout","React","ImageGallery","openModal","imageUrl","closeModal","images","isLoading","map","image","webformatURL","handleButtonClick","App","handleFormSubmit","prevProps","prevState","then","data","concat","hits","catch","length","scrollTo","top","documentElement","scrollHeight","behavior","position","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce0cf99c.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React, { Component } from 'react';\r\nimport './Searchbar.scss';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ query: event.currentTarget.value })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.query.trim() === '') {\r\n      toast.error('Введите корректный запрос!');\r\n      return\r\n    }\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    // this.setState({ query: '' })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","\r\nconst apiKey = '22003167-822d2c3fa2b59190c92d4d864';\r\n\r\nconst fetchImages = async (query, currentPage) => {\r\n  let result = await fetch(`https://pixabay.com/api/?q=${query}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`)\r\n  return await result.json()\r\n}\r\n\r\n\r\n\r\nexport default fetchImages;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.scss';\r\n\r\n\r\nconst ImageGalleryItem = (props) => {\r\n  const { id, original, preview, showModal } = props;\r\n  return (\r\n    <li\r\n      key={id}\r\n      className=\"ImageGalleryItem\">\r\n      <img\r\n        src={preview}\r\n        alt={preview}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => showModal(original)} />\r\n    </li>\r\n  )\r\n\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  showModal: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default ImageGalleryItem;","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  handleOverlayClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  clickOnImage = () => this.props.onClose();\r\n\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleOverlayClick} >\r\n        <div className=\"Modal\" >\r\n          <img\r\n            src={this.props.largeImageURL}\r\n            alt={this.props.largeImageURL}\r\n            onClick={this.clickOnImage} />\r\n        </div>\r\n      </ div>, modalRoot)\r\n  }\r\n}\r\n\r\n","import './Button.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ handleClick }) => {\r\n  return (\r\n    <button\r\n      className=\"loadMoreBtn\"\r\n      type=\"button\"\r\n      onClick={handleClick}\r\n    >Load more</button>\r\n  )\r\n};\r\n\r\n\r\nButton.propTypes = {\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Spinner from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\n\r\nclass Loader extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"loader\">\r\n\r\n        <Spinner\r\n          type=\"ThreeDots\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={4000} />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Loader;\r\n\r\n\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGallery.scss';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Modal from '../Modal/Modal';\r\nimport Button from '../Button/Button';\r\nimport Loader from '../Loader/Loader';\r\n\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    showModal: false,\r\n    largeImageURL: '',   \r\n  }\r\n\r\n  openModal = (imageUrl) => {\r\n    this.setState({\r\n      showModal: true,\r\n      largeImageURL: imageUrl,\r\n    })\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      showModal: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { images, isLoading } = this.props;\r\n    return (\r\n      <>\r\n        <ul className=\"ImageGallery\">\r\n          {images.map(image => (\r\n            <ImageGalleryItem\r\n              key={image.id}\r\n              id={image.id}\r\n              preview={image.webformatURL}\r\n              original={image.largeImageURL}\r\n              showModal={this.openModal}\r\n            />\r\n          ))}\r\n        </ul >\r\n\r\n        {isLoading && <Loader/>}\r\n\r\n        {!isLoading && <Button handleClick={this.props.handleButtonClick} />}\r\n\r\n        {this.state.showModal && <Modal largeImageURL={this.state.largeImageURL} onClose={this.closeModal} />}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.scss';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport fetchImages from './api/imagesApi';\nimport ImageGallery from './components/ImageGallery';\n\n\n\nclass App extends Component {\n  state = {\n    images: [],\n    error: null,\n    currentPage: 1,\n    query: '',\n    isLoading: false,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(this.state.currentPage);\n    // console.log('updated', this.state);\n    //console.log('isLoading', this.state.isLoading);\n\n    if (this.state.query === '') {\n      return\n    }\n\n    if ((prevState.query !== this.state.query) || (prevState.currentPage !== this.state.currentPage)) {\n      // console.log('changed');\n      fetchImages(this.state.query, this.state.currentPage)\n        .then(data => {\n          // console.log(data);\n          this.setState({\n            images: this.state.images.concat(data.hits),\n            isLoading: false\n          })\n        })\n        .catch(error => this.setState({ error }));\n    }\n\n    if (prevState.images.length < this.state.images.length) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  handleFormSubmit = query => {\n    if (!((query === this.state.query) && (this.state.currentPage === 1))) {\n      this.setState({\n        images: [],\n        error: null,\n        currentPage: 1,\n        query: query,\n        isLoading: true,\n      })\n    };\n  }\n\n  handleButtonClick = () => {\n    this.setState({\n      currentPage: this.state.currentPage + 1,\n      isLoading: true\n    })\n  }\n\n  render() {\n    const { images, isLoading, error } = this.state;\n    return (\n      <Container>\n        {error && <h2>Opps! Something went wrong!</h2>}\n        <Searchbar onSubmit={this.handleFormSubmit} />\n\n        {images.length > 0 && (\n          <ImageGallery\n            images={images}\n            handleButtonClick={this.handleButtonClick}\n            isLoading={isLoading}\n          />)}\n\n        <ToastContainer position=\"top-center\" autoClose={4000} />\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}